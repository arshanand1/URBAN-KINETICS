# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector


from form import Ui_Form

    

class Ui_log(object):
    def messagebox(self,title,message):
        # mess=QtWidgets.QMessageBox.information(self,title,message,QtWidgets.QMessageBox.Ok)
        mess = QtWidgets.QMessageBox()
        mess.setWindowTitle(title)
        mess.setText(message)
        mess.setStandardButtons(QtWidgets.QMessageBox.Ok)
        mess.exec_()

    def setupUi(self, log):
        log.setObjectName("log")
        log.resize(289, 186)
        log.setStyleSheet("")
        self.label = QtWidgets.QLabel(log)
        self.label.setGeometry(QtCore.QRect(40, 30, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiBold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("background-color:rgb(0, 170, 255)")
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(log)
        self.lineEdit.setGeometry(QtCore.QRect(60, 80, 171, 20))
        self.lineEdit.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.lineEdit.setObjectName("lineEdit")
        self.loginbtn = QtWidgets.QPushButton(log)
        self.loginbtn.setGeometry(QtCore.QRect(100, 120, 75, 24))
        self.loginbtn.setStyleSheet("background-color:rgb(149, 255, 28)")
        self.loginbtn.setObjectName("loginbtn")

        self.loginbtn.clicked.connect(self.login)

        self.retranslateUi(log)
        QtCore.QMetaObject.connectSlotsByName(log)

        

    # def openmainwindow(self):
    #     self.window=QtWidgets.QWidget()
    #     self.ui=Ui_MainWindow()
    #     self.ui.setupUi(self.window)
    # #     self.window.show()
    # def about(self):
    #     dlg = Ui_MainWindow()
    #     dlg.exec_()

    def login(self):
        password=self.lineEdit.text()
        try:
            mysql.connector.connect(host="localhost",user="root",password=password)
            print("hi")
            self.MainWindow = QtWidgets.QMainWindow()
            self.ui = Ui_MainWindow()
            self.ui.setupUi(self.MainWindow)
            self.MainWindow.show()
            
        except mysql.connector.Error as e:
            if e.errno==1045:
                self.messagebox("Sorry","Please Enter the correct password")
            else:
                pass
                # self.mainWindow = Ui_MainWindow(object)
                # object_window=Ui_MainWindow()
                # Ui_MainWindow.openwindow(object_window)
    

    def retranslateUi(self, log):
        _translate = QtCore.QCoreApplication.translate
        log.setWindowTitle(_translate("log", "Form"))
        self.label.setText(_translate("log", "    Enter Password of MySql"))
        self.loginbtn.setText(_translate("log", "LOGIN"))




class Ui_MainWindow(object):


    def openwindow(self):
        self.window=QtWidgets.QMainWindow()
        self.ui=Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()
        
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(475, 383)
        MainWindow.setStyleSheet("background-color:rgb(170, 170, 255)")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.mem = QtWidgets.QPushButton(self.centralwidget)
        self.mem.setGeometry(QtCore.QRect(120, 80, 201, 41))
        self.mem.setStyleSheet("background-color:rgb(255, 255, 0)")
        self.mem.setObjectName("mem")

        self.mem.clicked.connect(self.openwindow)

        
        self.exist = QtWidgets.QPushButton(self.centralwidget)
        self.exist.setGeometry(QtCore.QRect(120, 130, 201, 41))
        self.exist.setStyleSheet("background-color:rgb(0, 255, 127)")
        self.exist.setObjectName("exist")
        self.train = QtWidgets.QPushButton(self.centralwidget)
        self.train.setGeometry(QtCore.QRect(120, 180, 201, 41))
        self.train.setStyleSheet("background-color:rgb(85, 170, 0)")
        self.train.setObjectName("train")

        # self.train.clicked.connect(self.loadtrainerdata)

        self.bal = QtWidgets.QPushButton(self.centralwidget)
        self.bal.setGeometry(QtCore.QRect(120, 230, 201, 41))
        self.bal.setStyleSheet("background-color:rgb(255, 170, 0)")
        self.bal.setObjectName("bal")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(100, 0, 421, 71))
        font = QtGui.QFont()
        font.setFamily("Open Sans")
        font.setPointSize(24)
        font.setUnderline(True)
        self.label.setFont(font)
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 475, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.new_entry = QtWidgets.QAction(MainWindow)
        self.new_entry.setObjectName("new_entry")
        self.existingmember = QtWidgets.QAction(MainWindow)
        self.existingmember.setObjectName("existingmember")
        self.menuFile.addAction(self.new_entry)
        self.menuFile.addAction(self.existingmember)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.mem.setStatusTip(_translate("MainWindow", "Add a new member"))
        self.mem.setText(_translate("MainWindow", "New Member"))
        self.exist.setStatusTip(_translate("MainWindow", "Records of existing members"))
        self.exist.setText(_translate("MainWindow", "Existing Records"))
        self.train.setStatusTip(_translate("MainWindow", "Details of Trainers"))
        self.train.setText(_translate("MainWindow", "Trainers List"))
        self.bal.setStatusTip(_translate("MainWindow", "Balance details of members "))
        self.bal.setText(_translate("MainWindow", "Balance Details "))
        self.label.setText(_translate("MainWindow", "URBAN KINETICS"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.new_entry.setText(_translate("MainWindow", "New Entry"))
        self.new_entry.setStatusTip(_translate("MainWindow", "Add a new entry"))
        self.new_entry.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.existingmember.setText(_translate("MainWindow", "Existing Entry"))
        self.existingmember.setStatusTip(_translate("MainWindow", "find details of existing members"))
        self.existingmember.setShortcut(_translate("MainWindow", "Ctrl+E"))

    # def loadtrainerdata(self):
    #     con= mysql.connector.connect(host='localhost',user='root',password='anand',database='urban_kinetics')
    #     query="select * from trainer"
    #     cur=con.cursor()
    #     result= cur.execute(query)
    #     self.QtWidgets.QTableWidget.setRowCount(0)
    #     for row_number , row_data in enumerate(result):
    #         self.QWidget.QTableWidget.insertRow(row_number)
    #         for column_number,data in enumerate(row_data):
    #             self.QWidget.QTableWidget.setItem(row_number,column_number,QtWidgets.QWidget.QTableWidget(str(data)))

    #     con.close()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    log = QtWidgets.QWidget()
    ui = Ui_log()
    ui.setupUi(log)
    log.show()
    sys.exit(app.exec_())



# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     MainWindow = QtWidgets.QMainWindow()
#     ui = Ui_MainWindow()
#     ui.setupUi(MainWindow)
#     MainWindow.show()
#     sys.exit(app.exec_())
